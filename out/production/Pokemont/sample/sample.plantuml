@startuml

title __SAMPLE's Class Diagram__\n

  namespace sample {
    class sample.DualType {
        - reverse : Button
        + Button1Action()
    }
  }
  

  namespace sample {
    class sample.PokeFileController {
        - btnf1 : Button
        - btnf2 : Button
        - listView : ListView
        - ts : TextArea
        + Button1Action()
        + Button2Action()
    }
  }
  

  namespace sample {
    class sample.PokemonType {
        {static} + main()
        + start()
    }
  }
  

  namespace sample {
    abstract class sample.PokemonTypeController {
        - btnf1 : Button
        - mylistView : ListView<String>
        - poketypes1 : ObservableList<String>
        - poketypes2 : ObservableList<String>
        - ts : TextArea
        - type1 : ComboBox<String>
        - type1re : TextArea
        - type2 : ComboBox<String>
        - type2re : TextArea
        - type3re : TextArea
        + Button1Action()
        ~ getMylistView()
        ~ getTs()
        - damageCalculateButtonPressed()
        - defenseCalculateButtonPressed()
        - initialize()
    }
  }
  

  namespace sample {
    class sample.PokemonTypeFileVersion {
        + openFirstone()
    }
  }
  

  namespace sample {
    interface sample.Types {
        + getNewLine()
        + getPokeAttackHashDef()
        + getPokeAttackHashOf()
        + getPokeTypeList()
    }
  }
  

  sample.DualType -up-|> sample.PokemonTypeController
  sample.PokemonType .up.|> sample.Types
  sample.PokemonType -up-|> javafx.application.Application
  sample.PokemonTypeController .up.|> sample.Types
  sample.PokemonTypeFileVersion -up-|> sample.PokemonType


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
